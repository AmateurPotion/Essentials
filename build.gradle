plugins {
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

version '8.0'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://www.jitpack.io' }
}

dependencies {
    compileOnly 'com.github.Anuken.Arc:arc-core:v104.6'
    compileOnly 'com.github.Anuken.Mindustry:core:v104.6'
    implementation 'com.github.PersonTheCat:hjson-java:master'
    implementation 'de.svenkubiak:jBCrypt:0.4.1'
    implementation('net.dv8tion:JDA:4.1.1_141') {
        exclude module: 'opus-java'
    }
    implementation 'org.apache.maven:maven-artifact:3.6.3'
    implementation 'org.jsoup:jsoup:1.13.1'
    implementation 'org.slf4j:slf4j-nop:1.7.30'

    testCompile 'com.github.Anuken.Arc:arc-core:v104.6'
    testCompile 'com.github.Anuken.Mindustry:core:v104.6'
    testCompile 'com.github.Anuken.Mindustry:server:v104.6'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0-M1'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.7.0-M1'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.7.0-M1'
    testCompile 'com.github.stefanbirkner:system-rules:1.19.0'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.7'
    testImplementation 'org.mockito:mockito-core:3.3.3'
}

jar {
    enabled = false // disable original task
    dependsOn(shadowJar) // add new task
}

shadowJar {
    archiveFileName = "${project.archivesBaseName}.jar" // remove jar classifier and version
    minimize() // remove unused classes
}

sourceSets{
    test{
        resources{
            srcDir "src/main/resources"
        }
    }
}

compileJava {
    options.encoding = "UTF-8"
}