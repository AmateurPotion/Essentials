apply plugin: "java"

version '7.0'

sourceCompatibility = JavaVersion.VERSION_1_8

configurations.all {
    // Check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories{
    mavenCentral()
    jcenter()
    maven{ url 'https://www.jitpack.io' }
}

ext{
    //targetversion = 'v100'
    targetversion = '-SNAPSHOT'
}

compileJava {options.encoding = "UTF-8"}

dependencies{
    compileOnly "com.github.Anuken.Arc:arc-core:$targetversion"
    compileOnly "com.github.Anuken.Mindustry:core:$targetversion"
    //compile files("C:\\Users\\cloud\\Desktop\\Mindustry-patch-7\\core\\build\\libs\\core-release.jar")

    compile group: 'org.json', name: 'json', version: '20190722'
    compile group: 'org.yaml', name: 'snakeyaml', version: '1.25'
    compile group: 'org.apache.maven', name: 'maven-artifact', version: '3.0.3'
    compile group: 'de.svenkubiak', name: 'jBCrypt', version: '0.4.1'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    compile group: 'org.jsoup', name: 'jsoup', version: '1.12.1'

    compile("net.dv8tion:JDA:4.0.0_73")
    /*compile ('net.dv8tion:JDA:4.0.0_73') {
        exclude module: 'opus-java'
    }*/
    // https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'



    // DB Drivers
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.28.0'
    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.5.1'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
    compile group: 'postgresql', name: 'postgresql', version: '9.1-901-1.jdbc4'

    compile group: 'org.simplejavamail', name: 'simple-java-mail', version: '6.0.0-rc2'

    // Plugin
    //compile 'com.github.Gee-aitcH:PacketInterceptor:v101.1-0.1'

    // Tests
    //compile "com.github.xaguzman:pathfinding:0.2.6"
}

jar{
    version = null
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }

        configurations
                .compile
                .findAll { !it.name.endsWith('pom') }
                .collect { it.isDirectory() ? it : zipTree(it) }
    }
}
